
#Illumina HiSeq2500, raw data of 47 samples in fastq format.

#Data preprocessing FastQC: quality control check on raw sequence data and Trimmomatic: Improve illumina raw data quality through of trimming

fastqc UT_samples.fastq

trimmomatic PE -phred33 UT_samples_R1.fastq. UT_samples_R2_fastq UT_R1_paired.fq UT08_R1_unpaired.fq \
UT08_R2_paired.fq UT08_R2_unpaired.fq ILLUMINACLIP:/usr/local/bin/Trimmomatic/adapters/TruSeq3-PE.fa:2:30:10 \ 
HEADCROP:10 LEADING:3 TRAILING:3 SLIDINGWINDOW:7:15 MINLEN:44 CROP:133

Using PrefixPair: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT' and 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'
Using Long Clipping Sequence: 'GATCGGAAGAGCACACGTCTGAACTCCAGTCACCGCTCATTATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAA'
Using Long Clipping Sequence: 'AGATCGGAAGAGCACACGTCTGAACTCCAGTCAC'
Using Long Clipping Sequence: 'TACACTCTTTCCCTACACGACGCTCTTCCGATCT'
Using Long Clipping Sequence: 'GTGACTGGAGTTCAGACGTGTGCTCTTCCGATCT'
Using Long Clipping Sequence: 'AGATCGGAAGAGCGTCGTGTAGGGAAAGAGTGTA'
-------
#De novo assembly reads using SOAPdenovo2 with different k-mers sizes (21 to 87)

SOAPdenovo-63mer all -s ../soap_file.config -K 29 -R -o UT_assem_K29 1>ass.log 2>ass.err -p 4

SOAPdenovo-127mer all -s ../soap_file.config -K 87 -R -o UT106_assem_K87 1>ass.log 2>ass.err -p 4

#Gap closer to improve quality assembly

Gapcloser -a UT_assem.scafSeq -b soap_file.config -o UT_assem_gcloser.fasta -l 134

#example

#Gapcloser example, sample UT259
actual gap sum: 69811
extend gap sum: 33896
actual gap count: 265
finish gap count: 180
spent total time: 2s
>>>>>>>>>>assembling finished<<<<<<<<<<

 
#De novo reads paired end library using SPAdes with multi-kmer approach
#One library
spades.py -k 21,33,55,77 -1 UT_R1_paired.fq -2 ../../UT_R2_paired_.fq --careful --only-assembler -o Sample_UT_PE150_assembler

#Two or more libraries
spades.py -k 21,33,55,77,99,127 -1 UT_R1_paired.fq -1 Samples_two_libraries/UT_R1_paired.fq \
-2 UT_R2_paired.fq -2 Samples_two_libraries/UT_R2_paired.fq --careful --only-assembler -o Sample_PE150_assembler

#Quality assessment with Quast

Python quast.py UT_assembly.fasta -m 500 -t 12

#Selection criteria for the best assembly
#Contigs number
#N50
#Genome Fraction (%)
#Missassembling contig length 
#Genes number

#fix headers from SPAdes assemblies useful for Prokka input
awk '/^>/{print ">NODE" ++i; next}{print}' < file.fasta
--------
# New non-redundant database from 87 complete genomes of Mycobacterium genus annot gbk.files to improve homology based annotation.

~/prokka-genbank_to_fasta_db *gb > Mycobacterium.faa 

~/soft/github/cdhit/cd-hit -i Mycobacterium.faa -o Mycobacterium -T 0 -M 0 -g 1 -s 0.8 -c 0.9

~/soft/ncbi-blast-2.2.30+/bin/makeblastdb -dbtype prot -in Mycobacterium

# Annotation using Prokka
#!/bin/bash

for i in `ls`; do
 
prokka --outdir ${i}.prokka  --prefix  ${i}.prokka --genus Mycobacterium --species tuberculosis ${i} --usegenus Mycobacterium \
--mincontiglen 200 --cpus 32

done
--------
# improvement of assemblies generated by Spades with bwa and pilon
bwa index -a is UT_scaff_assembly.fasta

bwa mem -t 8 Ordering_assemblies/UT_scaff_assembly.fasta UT_Reads1_paired.fq UT_Reads2_paired.fq > UT-align-pe.sam

Samtools view -b UT-align-pe.sam > UT-align-pe.bam

samtools sort -m 10000000 UT-align-pe.bam -o outputPrefix

samtools sort -l 9 -T UT-align-pe_sort.bam -@ 4 -m 2G -O UT_align_pe.bam -o UT_align_pe_sort.bam 

samtools index UT_align_pe_sort.bam 

pilon --genome Ordering_assemblies/UT_scaff_assembly.fasta --frags HP_sam_bam/UT-align-pe.sam_sort.bam --output UT_pilon --outdir UT_Pilon --changes --vcf
-----------
#extract SNPs and coordenates from MTB H37Rv using Mummer

#!/bin/bash 

        for i in `ls`; do

        show-coords -r -c -l ${i} > ${i}.coords

        show-snps -C ${i} > ${i}.snps

        show-tiling ${i} > ${i}.tiling

done
------------

#identification of orthologues with Get_homologues:http://eead-csic-compbio.github.io/get_homologues/manual/ 
#48 genomes list include M. canetti genome like outgroup for use in subsequent analyzes

#BDBH
get_homologues.pl -I 48_MTB_genomes/list_MTB_canetti_48 -c -m cluster -d 48_MTB_genomes -S 90

get_homologues.pl -I 48_MTB_genomes/list_MTB_47 -c -m cluster -d 48_MTB_genomes -S 90

#COG
get_homologues.pl -I 48_MTB_genomes/list_MTB_canetti_48 -c -m cluster -d 48_MTB_genomes -G

get_homologues.pl -I 48_MTB_genomes/list_MTB_47 -c -m cluster -d 48_MTB_genomes -G

#OMLC
get_homologues.pl -I 48_MTB_genomes/list_MTB_canetti_48 -c -m cluster -d 48_MTB_genomes -S90 -M

get_homologues.pl -I 48_MTB_genomes/list_MTB_47 -c -m cluster -d 48_MTB_genomes -S 90 -M

# Clusters set intersection  (core)
compare_clusters.pl -o sample_intersection_47G_canetti/ -d UT53prokka_f0_alltaxa_list_47_canetti.txt_algBDBH_e0_S90_,UT53prokka_f0_alltaxa_list_47_canetti.txt_algCOG_e0_,UT53prokka_f0_alltaxa_list_47_canetti.txt_algOMCL_e0_S90_

compare_clusters.pl -o sample_intersection_MTB_canetti_48 -d UT53pilon_f0_alltaxa_list_MTB_canetti_48_algBDBH_e0_S90_,UT53pilon_f0_alltaxa_list_MTB_canetti_48_algCOG_e0_,UT53pilon_f0_alltaxa_list_MTB_canetti_48_algOMCL_e0_S90_

# Pangenome matrix
get_homologues.pl -I 48_MTB_genomes_oficial/list_MTB_canetti_48 -c -m cluster -d 48_MTB_genomes_oficial -t 0 -S 90 -M

get_homologues.pl -I 48_MTB_genomes_oficial/list_MTB_canetti_48 -c -m cluster -d 48_MTB_genomes_oficial -t 0 -G

get_homologues.pl -I 48_MTB_genomes_oficial/list_MTB_47 -c -m cluster -d 48_MTB_genomes_oficial -t 0 -S 90 -M

get_homologues.pl -I 48_MTB_genomes_oficial/list_MTB_47 -c -m cluster -d 48_MTB_genomes_oficial -t 0 -G

# Clusters intersection matrix (pan-genome)

./compare_clusters.pl -o sample_intersection_pgenome_matrix –m –d

get_homologues/compare_clusters.pl -o sample_intersection_pangenome -m -d UT53pilon_f0_0taxa_list_MTB_47_algCOG_e0_,UT53pilon_f0_0taxa_list_MTB_47_algOMCL_e0_S90_
 
get_homologues/compare_clusters.pl -o sample_intersection_pangenome_48_canetti -m -d UT53pilon_f0_0taxa_list_MTB_canetti_48_algCOG_e0_,UT53pilon_f0_0taxa_list_MTB_canetti_48_algOMCL_e0_S90_

# Graphic representation of pangenome with Heatmap script

get_homologues/plot_matrix_heatmap.sh -i pangenome_matrix_t0.tab -o pdf -r -H 10 -W 12 -m 12 -k "copy genes per cluster" -t "M. tuberculosis (clusters=4846)"

# Estimating Core, Shell, cloud

parse_pangenome_matrix.pl –m pangenome_matrix_t0.tab -s

# interrogating pangenome matrix to identify differences between the set of samples. eg:

get_homologues/parse_pangenome_matrix.pl -m pangenome_matrix_t0.tab -A Differential_high_low_prevalence.gbk/A_HP_complete_list.gbk -B Differential_high_low_prevalence.gbk/B_LP_outside_clusters_14.gbk -g 

#Estimating core/pan-genome size by sampling genomes

get_homologues/plot_pancore_matrix.pl -i pan_genome_list_75G_canetti.txt_algOMCL_S90.tab -f pan
-----------------

#sample intersection matrix, parsimony tree. Software PARS - from PHYLIP 

get_homologues/compare_clusters.pl -o sample_intersection_pangenome_Mtx_47G_canetti -m -T -d UT53prokka_f0_0taxa_list_47_canetti.txt_algCOG_e0_,UT53prokka_f0_0taxa_list_47_canetti.txt_algOMCL_e0_S90_

#maximun likelihood trees using IQTREE and Figtree

iqtree-omp-1.5.5-Linux/bin/iqtree-omp -s pangenome_matrix_t0.fasta -st BIN -m TEST -bb 1000 -alrt 1000 -nt AUTO
--------------------
# Pan-genome association study using Scoary

python ~uriel/Scoary/scoary.py -g pangenome_matrix_t0.tr.csv -t traits_47G_fix.csv 

# Multiple genome alignment with Mauve

progressiveMauve --output=threeway.xmfa --output-guide-tree=threeway.tree --backbone-output=threeway.backbone genome_1.gbk genome_2.gbk .......genome_47.gbk

#identification of SNPs related to prevalence from the SNPs_output (47_Genomes_snps_table) format from Mauve.
#Gaps and the lower frequencies in the appearance of nucleotides were removed from the 48 positions (1xgenome).

cut -f 1 47_Genomas_snps_table | awk '{chain=""; delete hp; delete lp; if (NR==1) next; split($0,v,""); \
for (i=1;i<=length(v);i++) {currvalue=v[i]; if (currvalue=="-") continue; if (i==32 || i==34 || i==44) continue; \
chain=chain""currvalue; if (i<=27){if (currvalue in hp) hp[currvalue]++; \
else hp[currvalue]=1;} else {if (currvalue in lp) lp[currvalue]++; \
else lp[currvalue]=1;}} print $0"\t"length(hp)"\t"length(lp)"\t"chain}' | awk '{if ($2==1 && $3==1 && length($4)>=30) print $0}'

# eg: identical positions for the 27 high prevalence genomes were fixed, and the frequency of change in the 20 genomes with a threshold = 0.7 is observed.

cut -f 1 47_Genomas_snps_table | grep -v "-" | awk '{delete bases; delete hp; delete lp; \
if (NR==1) next; split($0,v,""); for (i=1;i<=length(v);i++) {if (i==44) continue; currvalue=v[i]; \
if (currvalue in bases) bases[currvalue]++; else bases[currvalue]=1; if (i<=27){if (currvalue in hp) hp[currvalue]++; \ 
else hp[currvalue]=1;} else {if (currvalue in lp) lp[currvalue]++; else lp[currvalue]=1;}} for (base in bases){currbase=base; \
currhp=hp[currbase]/27; currlp=lp[currbase]/20; score=currhp-currlp; } threshold=0.7; \ 
if (score<-threshold || score>threshold) print $0"\t"length(bases)"\t"length(hp)"\t"length(lp)"\t"currhp"\t"currlp"\t"score}'

#output

OUTPUT eg:

GGGGGGGGGGGGGGGGGGGGGGGGGGGCCCCGGGCCCGCCGCCCCCCG        2       2       2       1       0.285714        0.714286
GGGGGGGGGGGGGGGGGGGGGGGGGGGAAAAGGGAAAGAAGAAAAAAG        2       2       2       1       0.285714        0.714286
TTTTTTTTTTTTTTTTTTTTTTTTTTTGGGGTTTGGGTGGTGGGGGGT        2       2       2       1       0.285714        0.714286
GGGGGGGGGGGGGGGGGGGGGGGGGGGTTTTGGGTTTGTTGTTTTTTG        2       2       2       1       0.285714        0.714286
TTTTTTTTTTTTTTTTTTTTTTTTTTTCCCCTTTCCCTCCTCCCCCCT        2       2       2       1       0.285714        0.714286
GGGGGGGGGGGGGGGGGGGGGGGGGGGAAAAGGGAAAGAAGAAAAAAG        2       2       2       1       0.285714        0.714286
GGGGGGGGGGGGGGGGGGGGGGGGGGGAAAAGGGAAAGAAGAAAAAAG        2       2       2       1       0.285714        0.714286
GGGGGGGGGGGGGGGGGGGGGGGGGGGAAAAGGGAAAGAAGAAAAAAG        2       2       2       1       0.285714        0.714286
TTTTTTTTTTTTTTTTTTTTTTTTTTTCCCCTTTCCCTCCTCCCCCCT        2       2       2       1       0.285714        0.714286
TTTTTTTTTTTTTTTTTTTTTTTTTTTGGGGTTTGGGTGGTGGGGGGT        2       2       2       1       0.285714        0.714286
TTTTTTTTTTTTTTTTTTTTTTTTTTTCCCCTTTCCCTCCTCCCCCCT        2       2       2       1       0.285714        0.714286
GGGGGGGGGGGGGGGGGGGGGGGGGGGAAAAGGGAAAGAAGAAAAAAG        2       2       2       1       0.285714        0.714286
GGGGGGGGGGGGGGGGGGGGGGGGGGGAAAAGGGAAAGAAGAAAAAAG        2       2       2       1       0.285714        0.714286

#In-depth analysis the SNPs_file (47_Genomas_snps_table) produced by mauve alignment
./freqs.sh # see script in https://github.com/ualonso85
./freqs.sh | awk '{if ($3==1) next; if ($3>2) next; print $0}'
./freqs.sh | awk '{if ($3==1) next; if ($3>2) next; print $0}' | tr "." "," | sort -k8,8nr | less

